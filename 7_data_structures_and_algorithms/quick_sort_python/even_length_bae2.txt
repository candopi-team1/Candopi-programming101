 Partition gets    ... List= [0, 1] , pv= 0 , Li= 0 Ri= 1 , 0 --> 1
      swap 0  and  0
 Partition returns ... List= [0, 1] , pv= 0 , Li= 1 Ri= -1

HELPER  [0, 1] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [0, 1]
When index= 1 , RHS is sorted. [0, 1]
[0, 1] 2

*********

 Partition gets    ... List= [1, 0] , pv= 1 , Li= 0 Ri= 1 , 1 --> 0
      swap 0  and  1
 Partition returns ... List= [0, 1] , pv= 1 , Li= 1 Ri= 0

HELPER  [0, 1] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [0, 1]
When index= 1 , RHS is sorted. [0, 1]
[0, 1] 2

*********

 Partition gets    ... List= [0, 1, 2, 3] , pv= 1 , Li= 0 Ri= 3 , 0 --> 3
      swap 1  and  1
 Partition returns ... List= [0, 1, 2, 3] , pv= 1 , Li= 2 Ri= 0

HELPER  [0, 1, 2, 3] index= 2 Li= 0 Ri= 3
 Partition gets    ... List= [0, 1, 2, 3] , pv= 0 , Li= 0 Ri= 1 , 0 --> 1
      swap 0  and  0
 Partition returns ... List= [0, 1, 2, 3] , pv= 0 , Li= 1 Ri= -1

HELPER  [0, 1, 2, 3] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [0, 1, 2, 3]
When index= 1 , RHS is sorted. [0, 1, 2, 3]
 Partition gets    ... List= [0, 1, 2, 3] , pv= 2 , Li= 2 Ri= 3 , 2 --> 3
      swap 2  and  2
 Partition returns ... List= [0, 1, 2, 3] , pv= 2 , Li= 3 Ri= 1

HELPER  [0, 1, 2, 3] index= 3 Li= 2 Ri= 3
When index= 3 , LHS is sorted. [0, 1, 2, 3]
When index= 3 , RHS is sorted. [0, 1, 2, 3]
[0, 1, 2, 3] 4

*********

 Partition gets    ... List= [3, 2, 1, 0] , pv= 2 , Li= 0 Ri= 3 , 3 --> 0
      swap 0  and  3
      swap 1  and  2
 Partition returns ... List= [0, 1, 2, 3] , pv= 2 , Li= 2 Ri= 1

HELPER  [0, 1, 2, 3] index= 2 Li= 0 Ri= 3
 Partition gets    ... List= [0, 1, 2, 3] , pv= 0 , Li= 0 Ri= 1 , 0 --> 1
      swap 0  and  0
 Partition returns ... List= [0, 1, 2, 3] , pv= 0 , Li= 1 Ri= -1

HELPER  [0, 1, 2, 3] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [0, 1, 2, 3]
When index= 1 , RHS is sorted. [0, 1, 2, 3]
 Partition gets    ... List= [0, 1, 2, 3] , pv= 2 , Li= 2 Ri= 3 , 2 --> 3
      swap 2  and  2
 Partition returns ... List= [0, 1, 2, 3] , pv= 2 , Li= 3 Ri= 1

HELPER  [0, 1, 2, 3] index= 3 Li= 2 Ri= 3
When index= 3 , LHS is sorted. [0, 1, 2, 3]
When index= 3 , RHS is sorted. [0, 1, 2, 3]
[0, 1, 2, 3] 4

*********

 Partition gets    ... List= [99, 11, 2, 3] , pv= 11 , Li= 0 Ri= 3 , 99 --> 3
      swap 3  and  99
      swap 2  and  11
 Partition returns ... List= [3, 2, 11, 99] , pv= 11 , Li= 2 Ri= 1

HELPER  [3, 2, 11, 99] index= 2 Li= 0 Ri= 3
 Partition gets    ... List= [3, 2, 11, 99] , pv= 3 , Li= 0 Ri= 1 , 3 --> 2
      swap 2  and  3
 Partition returns ... List= [2, 3, 11, 99] , pv= 3 , Li= 1 Ri= 0

HELPER  [2, 3, 11, 99] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [2, 3, 11, 99]
When index= 1 , RHS is sorted. [2, 3, 11, 99]
 Partition gets    ... List= [2, 3, 11, 99] , pv= 11 , Li= 2 Ri= 3 , 11 --> 99
      swap 11  and  11
 Partition returns ... List= [2, 3, 11, 99] , pv= 11 , Li= 3 Ri= 1

HELPER  [2, 3, 11, 99] index= 3 Li= 2 Ri= 3
When index= 3 , LHS is sorted. [2, 3, 11, 99]
When index= 3 , RHS is sorted. [2, 3, 11, 99]
[2, 3, 11, 99] 4

*********

 Partition gets    ... List= [38, 2, 18, 0] , pv= 2 , Li= 0 Ri= 3 , 38 --> 0
      swap 0  and  38
      swap 2  and  2
 Partition returns ... List= [0, 2, 18, 38] , pv= 2 , Li= 2 Ri= 0

HELPER  [0, 2, 18, 38] index= 2 Li= 0 Ri= 3
 Partition gets    ... List= [0, 2, 18, 38] , pv= 0 , Li= 0 Ri= 1 , 0 --> 2
      swap 0  and  0
 Partition returns ... List= [0, 2, 18, 38] , pv= 0 , Li= 1 Ri= -1

HELPER  [0, 2, 18, 38] index= 1 Li= 0 Ri= 1
When index= 1 , LHS is sorted. [0, 2, 18, 38]
When index= 1 , RHS is sorted. [0, 2, 18, 38]
 Partition gets    ... List= [0, 2, 18, 38] , pv= 18 , Li= 2 Ri= 3 , 18 --> 38
      swap 18  and  18
 Partition returns ... List= [0, 2, 18, 38] , pv= 18 , Li= 3 Ri= 1

HELPER  [0, 2, 18, 38] index= 3 Li= 2 Ri= 3
When index= 3 , LHS is sorted. [0, 2, 18, 38]
When index= 3 , RHS is sorted. [0, 2, 18, 38]
[0, 2, 18, 38] 4

*********

